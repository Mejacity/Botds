import discord
from discord.ext import commands
from datetime import datetime
import csv

# –í–∫–ª—é—á–∞–µ–º intents –¥–ª—è —á—Ç–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
intents = discord.Intents.default()
intents.message_content = True  # –í–∞–∂–Ω–æ!

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º "!"
bot = commands.Bot(command_prefix="!", intents=intents)

# ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –ª–æ–≥–æ–≤
LOG_CHANNEL_ID = 1295468599745450137  # ID –∫–∞–Ω–∞–ª–∞, –∫—É–¥–∞ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–±–µ–≥–µ

log_file = "message_log.txt"
data_file = "player_data.csv"


# –ß–∏—Ç–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.event
async def on_message(message):
    if message.author == bot.user:
        return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –µ–≥–æ
    current_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

    # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å —Å –¥–∞—Ç–æ–π
    if message.content:  # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        print(f"[{current_time}] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.author}: {message.content}")
    elif message.embeds:  # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å Embed
        print(f"[{current_time}] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.author} —Å Embed:")
        for embed in message.embeds:
            print(f"  –ó–∞–≥–æ–ª–æ–≤–æ–∫ Embed: {embed.title}")
            print(f"  –û–ø–∏—Å–∞–Ω–∏–µ Embed: {embed.description}")
            if embed.author:
                print(f"  –ê–≤—Ç–æ—Ä Embed: {embed.author.name}")
            if embed.footer:
                print(f"  Footer Embed: {embed.footer.text}")
            if embed.fields:
                for field in embed.fields:
                    print(f"  –ü–æ–ª–µ Embed: {field.name} - {field.value}")
    elif message.attachments:  # –ï—Å–ª–∏ –µ—Å—Ç—å –≤–ª–æ–∂–µ–Ω–∏—è
        print(f"[{current_time}] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.author} —Å –≤–ª–æ–∂–µ–Ω–∏–µ–º: ")
        for attachment in message.attachments:
            print(f"  –í–ª–æ–∂–µ–Ω–∏–µ: {attachment.url}")  # –í—ã–≤–æ–¥–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ –≤–ª–æ–∂–µ–Ω–∏–µ

    # –ó–∞–ø–∏—Å—å –≤ –ª–æ–≥-—Ñ–∞–π–ª
    with open(log_file, "a", encoding="utf-8") as f:
        if message.content:  # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            f.write(f"[{current_time}] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.author}: {message.content}\n")
        elif message.embeds:  # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å Embed
            f.write(f"[{current_time}] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.author} —Å Embed:\n")
            for embed in message.embeds:
                f.write(f"  –ó–∞–≥–æ–ª–æ–≤–æ–∫ Embed: {embed.title}\n")
                f.write(f"  –û–ø–∏—Å–∞–Ω–∏–µ Embed: {embed.description}\n")
                if embed.author:
                    f.write(f"  –ê–≤—Ç–æ—Ä Embed: {embed.author.name}\n")
                if embed.footer:
                    f.write(f"  Footer Embed: {embed.footer.text}\n")
                if embed.fields:
                    for field in embed.fields:
                        f.write(f"  –ü–æ–ª–µ Embed: {field.name} - {field.value}\n")
        elif message.attachments:  # –ï—Å–ª–∏ –µ—Å—Ç—å –≤–ª–æ–∂–µ–Ω–∏—è
            f.write(f"[{current_time}] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.author} —Å –≤–ª–æ–∂–µ–Ω–∏–µ–º:\n")
            for attachment in message.attachments:
                f.write(f"  –í–ª–æ–∂–µ–Ω–∏–µ: {attachment.url}\n")

    # –í–∞–∂–Ω–æ: –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω—É–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ª–æ–≥–æ–≤
    process_log(log_file, data_file)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–æ–≥–æ–≤ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
def process_log(log_file, data_file):
    player_data = {}
    current_author = ""
    current_distance = 0
    current_day = datetime.now().strftime("%Y-%m-%d")

    with open(log_file, "r", encoding="utf-8") as f:
        for line in f:
            if "–ê–≤—Ç–æ—Ä Embed:" in line:
                current_author = line.split(":", 1)[1].strip()
            elif "–ü–æ–ª–µ Embed: Distance" in line:
                current_distance = int(''.join(filter(str.isdigit, line)))  # –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å–ª–æ –∏–∑ —Å—Ç—Ä–æ–∫–∏

            if current_author and current_distance:
                if current_author not in player_data:
                    player_data[current_author] = {"week_total": 0, "day_total": 0, "days": {}}

                player_data[current_author]["week_total"] += current_distance
                player_data[current_author]["day_total"] += current_distance
                if current_day not in player_data[current_author]["days"]:
                    player_data[current_author]["days"][current_day] = []
                player_data[current_author]["days"][current_day].append(f"Distance: {current_distance}km")

                current_author = ""
                current_distance = 0

    save_data(data_file, player_data)


def save_data(data_file, player_data):
    with open(data_file, "w+", newline="", encoding="utf-8") as f:
        writer = csv.writer(f)
        header = ["–ò–≥—Ä–æ–∫", "–ù–µ–¥–µ–ª—å–Ω—ã–π –Ω–∞–∫–∞—Ç", "–î–Ω–µ–≤–Ω–æ–π –Ω–∞–∫–∞—Ç"] + sorted(set(day for p in player_data.values() for day in p["days"]))
        writer.writerow(header)

        for player, stats in player_data.items():
            row = [player, stats["week_total"], stats["day_total"]]
            for day in header[3:]:
                row.append(" | ".join(stats["days"].get(day, [])))
            writer.writerow(row)


# –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV-—Ñ–∞–π–ª–∞
def load_player_data(file_path):
    """–ß–∏—Ç–∞–µ—Ç CSV-—Ñ–∞–π–ª –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–≥—Ä–æ–∫–æ–≤."""
    players = []
    try:
        with open(file_path, "r", encoding="utf-8") as f:
            reader = csv.DictReader(f)
            for row in reader:
                nickname = row.get("–ò–≥—Ä–æ–∫", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π")
                weekly_mileage = row.get("–ù–µ–¥–µ–ª—å–Ω—ã–π –Ω–∞–∫–∞—Ç", "0 –∫–º")
                daily_mileage = row.get("–î–Ω–µ–≤–Ω–æ–π –Ω–∞–∫–∞—Ç", "0 –∫–º")
                players.append(f"{nickname} - {weekly_mileage} | {daily_mileage}")
    except FileNotFoundError:
        return "–û—à–∏–±–∫–∞: —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}"

    return "\n".join(players) if players else "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–±–µ–≥–µ."


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤—Ä—É—á–Ω—É—é
@bot.command(name='—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
async def fetch_stats(ctx):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."""
    response = load_player_data(data_file)
    await ctx.send(f"üìä **–ü—Ä–æ–±–µ–≥ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:**\n{response}")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å —Ç–≤–æ–∏–º —Ç–æ–∫–µ–Ω–æ–º
TOKEN = "MTM0MjUwOTcyMDE0NTEwNTA0OQ.GySKDK.E5_rhvx4m7sdFFvtKTJ5MTNIKQBMC8QSHSb-Yo"  # –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
@bot.event
async def on_ready():
    print(f"–ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω!")

bot.run(TOKEN)
